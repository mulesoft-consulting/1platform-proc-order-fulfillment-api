<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:anypoint-mq="http://www.mulesoft.org/schema/mule/anypoint-mq" xmlns:order-api="http://www.mulesoft.org/schema/mule/order-api" xmlns:customer-apispec="http://www.mulesoft.org/schema/mule/customer-apispec" xmlns:account-apispec="http://www.mulesoft.org/schema/mule/account-apispec" xmlns:customer360api="http://www.mulesoft.org/schema/mule/customer360api" xmlns:api-gateway="http://www.mulesoft.org/schema/mule/api-gateway" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:notification-apispec="http://www.mulesoft.org/schema/mule/notification-apispec" xmlns:order-apispec="http://www.mulesoft.org/schema/mule/order-apispec" xmlns:product-api="http://www.mulesoft.org/schema/mule/product-api" xmlns:tls="http://www.mulesoft.org/schema/mule/tls" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd  http://www.mulesoft.org/schema/mule/notification-apispec http://www.mulesoft.org/schema/mule/notification-apispec/current/mule-notification-apispec.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/order-apispec http://www.mulesoft.org/schema/mule/order-apispec/current/mule-order-apispec.xsd http://www.mulesoft.org/schema/mule/product-api http://www.mulesoft.org/schema/mule/product-api/current/mule-product-api.xsd
http://www.mulesoft.org/schema/mule/api-gateway http://www.mulesoft.org/schema/mule/api-gateway/current/mule-api-gateway.xsd
http://www.mulesoft.org/schema/mule/customer360api http://www.mulesoft.org/schema/mule/customer360api/current/mule-customer360api.xsd
http://www.mulesoft.org/schema/mule/account-apispec http://www.mulesoft.org/schema/mule/account-apispec/current/mule-account-apispec.xsd
http://www.mulesoft.org/schema/mule/customer-apispec http://www.mulesoft.org/schema/mule/customer-apispec/current/mule-customer-apispec.xsd
http://www.mulesoft.org/schema/mule/order-api http://www.mulesoft.org/schema/mule/order-api/current/mule-order-api.xsd
http://www.mulesoft.org/schema/mule/anypoint-mq http://www.mulesoft.org/schema/mule/anypoint-mq/current/mule-anypoint-mq.xsd">
	<flow name="order-fulfillment-api-main">
        <http:listener config-ref="order-fulfillment-api-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="order-fulfillment-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="order-fulfillment-api-console">
        <http:listener config-ref="order-fulfillment-api-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="order-fulfillment-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="put:\shipments\(id):application\json:order-fulfillment-api-config">
        <ee:transform>
            <ee:variables>
                <ee:set-variable variableName="id">attributes.uriParams.id</ee:set-variable>
            </ee:variables>
        </ee:transform>
        <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  meta: {
    messages: [
      {
        severity: "INFO",
        code: "200",
        description: "OK",
        link: {
          href: "http://localhost",
          title: "All good!"
        }
      }
    ],
    totalItems: 3,
    pagingOffset: 1,
    pagingLimit: 15
  },
  links: {
    self: {
      href: "http://localhost/currentPage",
      title: "Current page"
    },
    first: {
      href: "http://localhost/firstPage",
      title: "First Page"
    },
    prev: {
      href: "http://localhost/previousPage",
      title: "Previous page"
    },
    next: {
      href: "http://localhost/nextPage",
      title: "Next Page"
    },
    last: {
      href: "http://localhost/lastPage",
      title: "Last Page"
    }
  },
  messages: [
    {
      itemId: "2222222",
      severity: "INFO",
      code: "201",
      description: "shipment record created"
    }, 
    {
      itemId: "3333333",
      severity: "INFO",
      code: "202",
      description: "Create shipment request accepted"
    }, 
    {
      itemId: "111111",
      severity: "INFO",
      code: "409",
      description: "Duplicate shipment record exists"
    }
  ]
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="put:\payments\(id):application\json:order-fulfillment-api-config">
        <ee:transform>
            <ee:variables>
                <ee:set-variable variableName="id">attributes.uriParams.id</ee:set-variable>
            </ee:variables>
        </ee:transform>
        <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  meta: {
    messages: [
      {
        severity: "INFO",
        code: "200",
        description: "OK",
        link: {
          href: "http://localhost",
          title: "All good!"
        }
      }
    ],
    totalItems: 3,
    pagingOffset: 1,
    pagingLimit: 15
  },
  links: {
    self: {
      href: "http://localhost/currentPage",
      title: "Current page"
    },
    first: {
      href: "http://localhost/firstPage",
      title: "First Page"
    },
    prev: {
      href: "http://localhost/previousPage",
      title: "Previous page"
    },
    next: {
      href: "http://localhost/nextPage",
      title: "Next Page"
    },
    last: {
      href: "http://localhost/lastPage",
      title: "Last Page"
    }
  },
  messages: [
    {
      itemId: "2222222",
      severity: "INFO",
      code: "201",
      description: "payment record created"
    }, 
    {
      itemId: "3333333",
      severity: "INFO",
      code: "202",
      description: "Create payment request accepted"
    }, 
    {
      itemId: "111111",
      severity: "INFO",
      code: "409",
      description: "Duplicate payment record exists"
    }
  ]
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="get:\shipments\(id):order-fulfillment-api-config">
        <ee:transform>
            <ee:variables>
                <ee:set-variable variableName="id">attributes.uriParams.id</ee:set-variable>
            </ee:variables>
        </ee:transform>
        <logger level="INFO" message="get:\shipments\(id):order-fulfillment-api-config" />
    </flow>
	<flow name="get:\payments\(id):order-fulfillment-api-config">
        <ee:transform>
            <ee:variables>
                <ee:set-variable variableName="id">attributes.uriParams.id</ee:set-variable>
            </ee:variables>
        </ee:transform>
        <logger level="INFO" message="get:\payments\(id):order-fulfillment-api-config" />
    </flow>
    <flow name="get:\orders:order-fulfillment-api-config">
        <!-- <order-api:get-orders doc:name="Get orders" doc:id="0bd2d7dd-874a-4655-bace-3098bde7728b" config-ref="Order_API_Spec_Config" customer-id="#[attributes.queryParams.customerId]"/> -->
		<order-api:get-orders doc:name="Get orders" doc:id="9dc77ad6-701a-477c-8d39-8e7e896a3093" config-ref="Order_API_Spec_Config" customer-id="#[attributes.queryParams.customerId]"/>
		<!-- <order-apispec:get-orders doc:name="Get orders" doc:id="04aa7a0e-4316-4dca-828d-57bbecf5a94b" config-ref="Order_API_Spec_Config" customer-id="#[attributes.queryParams.customerId]"/> -->
		<ee:transform doc:name="Set Variables" doc:id="b23db412-ebef-415f-b040-cc793a41af22" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="orders" ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<foreach doc:name="For Each Order" doc:id="b0439129-bc05-4654-a811-5db9bb1a630e" collection="#[payload.orders]">
			<flow-ref doc:name="Aggregate Order Info" doc:id="0724385e-a1bb-45f7-a405-3d9ca87a7500" name="aggregate_order_info-Sub_Flow"/>
			<ee:transform doc:name="Acumulate Orders" doc:id="5ebb83b2-a21b-4f6c-96fc-8d08cdaf0012" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="orders" ><![CDATA[%dw 2.0
output application/java
---
vars.orders ++ [payload]]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
		</foreach>
		<ee:transform doc:name="Transform Message" doc:id="c6c43b57-8ea6-4c2f-9f27-715becddf240" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	meta: {
        totalItems: sizeOf(vars.orders),
        pagingOffset: 0
    },
    orders: vars.orders
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
    </flow>
	<flow name="get:\orders\(id):order-fulfillment-api-config">
        <!-- <order-api:get-order-by-id doc:name="Get order by id" doc:id="d86d50e7-acec-4dde-945f-dc068630ac83" id="#[attributes.uriParams.id]" config-ref="Order_API_Spec_Config"/> -->
		<order-api:get-order-by-id doc:name="Get order by id" doc:id="1d3469c6-9dc9-4121-8138-169b2daf8e92" id="#[attributes.uriParams.id]" config-ref="Order_API_Spec_Config"/>
		<!-- <order-apispec:get doc:name="Get" doc:id="8850ba56-a4f4-485e-97a3-13c3a0cf7f54" id="#[attributes.uriParams.id]" config-ref="Order_API_Spec_Config"/> -->
		<flow-ref doc:name="Aggregate Order Info" doc:id="f7efd846-29a7-417c-ae40-fa9b49350cf6" name="aggregate_order_info-Sub_Flow"/>
		<ee:transform doc:name="Transform Message" doc:id="c0a1cf6f-9a4a-4014-9c71-3eb6935908d5" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
    </flow>
	<sub-flow name="aggregate_order_info-Sub_Flow" doc:id="986173c6-f129-4938-a74a-9ad43a87df38" >
		<ee:transform doc:name="Set Flow Variables" doc:id="79394a2d-be88-469c-aaba-e937128af6eb" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="originalOrder" ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-variable>
				<ee:set-variable variableName="orderItems" ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<foreach doc:name="For Each orderItem" doc:id="b0d9a7ba-7bfe-492e-90f7-2a03217eea85" collection="#[payload.orderItems]">
			<ee:transform doc:name="Set Variables" doc:id="b01c6313-0c3f-459f-a7a1-a7956cbf1bd5">
				<ee:message />
				<ee:variables>
					<ee:set-variable variableName="originalProductId"><![CDATA[%dw 2.0
output application/java
---
payload.product.id]]></ee:set-variable>
					<ee:set-variable variableName="currentProduct"><![CDATA[%dw 2.0
output application/java
---
null]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<product-api:get doc:name="Get" doc:id="7b0e204c-32bd-4c0e-91f8-83252523354b" config-ref="Product_API_Config" id="#[payload.product.id]" target="currentProduct" />
			<ee:transform doc:name="Create aggregated orderItem" doc:id="ac952287-932b-475a-826c-c80707291f73">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="orderItems"><![CDATA[%dw 2.0
output application/java
---
vars.orderItems ++
[
	{
		product: {
			name: vars.currentProduct.name,
			id: vars.currentProduct.id
		},
		quantity: {
			ordered: payload.quantity.ordered
		},
		sourceSystem: vars.currentProduct.sourceSystem default "mysql",
		orderLine: payload.orderLine,
		pricing: {
			totalAmount: (vars.currentProduct.pricing.listPrice as Number default 0) * payload.quantity.ordered as Number,
			itemAmount: vars.currentProduct.pricing.listPrice,
			discountPct: payload.pricing.discountPct default 0
			//discountedAmount: payload.pricing.discountPct default 0,
			//currency: {
			//	code: "USD"
			//}
		},
		location: {	
		}
	}
]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		</foreach>
		<ee:transform doc:name="Create Order Body" doc:id="739f22fb-064e-48a7-934b-83e919720380" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
fun customRound(value)=value as Number as String {"format": "#.##"}
var taxValue=p('tax_value') as Number
var subTotal=customRound(sum(vars.orderItems.pricing.totalAmount map $)) as Number
var taxAmount=customRound(subTotal * taxValue) as Number
var totalAmount=customRound(subTotal + taxAmount) as Number
var shippingAddress=(vars.customer.postalAddresses filter ($."type" == "shipping"))[0]
---
(payload - "orderItems" - "trackingNumber" - "price" - "orderDateTime" - "deliveryAddress") ++
{
	orderDateTime: payload.orderDateTime default now(),
	trackingNumber: vars.originalOrder.trackingNumber default "171b30c3-15ef-4d56-b775-2f4c175a64d0",
	shippingCost: 0.00,
	taxAmount:  taxAmount,
	subTotal: subTotal,
	totalAmount: totalAmount,
	orderItems: vars.orderItems,
	deliveryAddress: {
		addressId: shippingAddress.addressId default "",
	    addressLines: shippingAddress default [],
	    city: shippingAddress.city default "",
	    countryCode: shippingAddress.countryCode default "",
	    postalCode: shippingAddress.postalCode default "",
	    state: shippingAddress.state default "",
	    "type": "shipping"
	}
}
]]></ee:set-payload>
			</ee:message>
			<ee:variables />
		</ee:transform>
	</sub-flow>
	<flow name="post:\orders:application\json:order-fulfillment-api-config">
    		<ee:transform doc:name="Create empty array" doc:id="719920bb-f0ee-41df-b7a8-581d4296f031">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="messages"><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <foreach doc:name="For Each Order" doc:id="c9b5ddf6-ecd1-47e3-9657-560839598a73" collection="#[payload]">
            <ee:transform doc:name="Define Variables" doc:id="6478a6b8-4219-4295-95f2-b857cb49ff21">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="orderItems"><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-variable>
						<ee:set-variable variableName="originalCustomerId"><![CDATA[%dw 2.0
output application/java
---
payload.customerId as String]]></ee:set-variable>
					<ee:set-variable variableName="originalProductId" ><![CDATA[%dw 2.0
output application/java
---
null]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			<try doc:name="Try" doc:id="bdc47c09-3f76-4680-a250-a4ba40f851f5">
				<customer-apispec:get-customer-by-id doc:name="Get customer by id" doc:id="a8f434e3-127b-423c-9beb-ad36f4bafe9d" config-ref="Customer_API_Spec_Config" id="#[payload.customerId]" target="customer"/>
				<foreach doc:name="For Each orderItem" doc:id="ec21fb63-55c2-44e5-94e5-63a72ac8a0d7" collection="#[payload.orderItems]">
					<ee:transform doc:name="Set Variables" doc:id="f9833c98-c169-4ff4-b818-b39351e00bba" >
						<ee:message >
						</ee:message>
						<ee:variables >
							<ee:set-variable variableName="originalProductId" ><![CDATA[%dw 2.0
output application/java
---
payload.product.id]]></ee:set-variable>
							<ee:set-variable variableName="currentProduct" ><![CDATA[%dw 2.0
output application/java
---
null]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					<product-api:get doc:name="Get" doc:id="d65eee92-1afb-4e7f-98aa-ee90bce39cc5" id="#[payload.product.id]" target="currentProduct" config-ref="Product_API_Config" />
                    <ee:transform doc:name="Transform Message" doc:id="0dacb70c-32ba-4266-aa6d-cb10a76d7ac9">
                        <ee:message />
                        <ee:variables>
                            <ee:set-variable variableName="orderItems"><![CDATA[%dw 2.0
output application/java
---
vars.orderItems ++
[
	{
		product: {
			name: vars.currentProduct.name,
			id: vars.currentProduct.id
		},
		quantity: {
			ordered: payload.quantity.ordered
		},
		sourceSystem: vars.currentProduct.sourceSystem default "mysql",
		orderLine: payload.orderLine,
		pricing: {
			totalAmount: vars.currentProduct.pricing.listPrice default 0 * payload.quantity.ordered as Number,
			itemAmount: vars.currentProduct.pricing.listPrice,
			//discountPct: payload.pricing.discountPct
			discountedAmount: payload.pricing.discountPct default 0,
			currency: {
				code: "USD"
			}
		},
		location: {
			
		}
	}
]]]></ee:set-variable>
                        </ee:variables>
                    </ee:transform>
                </foreach>
                <ee:transform doc:name="Create Order Body" doc:id="c8cb6ddc-fff0-4c6f-956b-93be3f1a4fd1">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/java
import * from dw::core::Binaries
var customerEmail = (vars.customer.email filter $."type" == "Work")[0]
var myDateTime=payload.orderDateTime default now() as String
---
[
	(payload - "orderItems" - "customerId" - "trackingNumber" - "email" - "status") ++
	{
		orderItems: vars.orderItems,
		customerId: vars.customer.accountId,
		trackingNumber: toBase64(myDateTime) as String,
		email: {
			address: customerEmail.address default "demos+1platformerror@mulesoft.com",
			doNotEmail: customerEmail.doNotEmail default false,
			"type": customerEmail."type" default "Work",
			preferred: customerEmail.preferred default false
		},
		status: "Completed"
	}
]]]></ee:set-payload>
                    </ee:message>
                    <ee:variables />
                </ee:transform>
                <set-variable value="#[payload[0]]" doc:name="Save Created Order" doc:id="38fdc95a-a3cf-41a5-93e0-1e7602f2f9ab" variableName="createdOrder"/>
				<order-api:post-orders doc:name="Post orders" doc:id="cef00289-3c37-4fb9-a55b-74ae4efc1eef" config-ref="Order_API_Spec_Config" /> 
				<!-- <order-apispec:post doc:name="Create Order" doc:id="3dda124b-20c4-494b-a446-c7861b04381d" config-ref="Order_API_Spec_Config" /> -->
                <ee:transform doc:name="Save Message" doc:id="da2f3c1f-2e1d-49e6-be27-c686883b03f4">
                    <ee:message />
                    <ee:variables>
                        <ee:set-variable variableName="messages"><![CDATA[%dw 2.0
output application/java
---
vars.messages ++
[
	{
      itemId: payload.messages[0].itemId default payload[0].id,
      severity: payload.messages[0].severity default "INFO",
      code: payload.messages[0].code default "201",
      description: payload.messages[0].description default "Order created."
    }
]]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
				<ee:transform doc:name="Create Event" doc:id="3bc60c98-b23b-4ce4-93ed-4b2f50f5d470" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var orderId = (if (payload.messages[0].itemId == null) payload[0].id else payload.messages[0].itemId)
var customerId=vars.customer.id
---
{
	"type": 'NEW_ORDER',
     datetime: now(),
     publisher: "Order Fulfillment API",
      body: {
      	customerId: customerId,
      	orderId: orderId
      }
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<anypoint-mq:publish doc:name="Publish" doc:id="c7e9bf56-5cca-48aa-992c-2df7fdfbd7ce" config-ref="Anypoint_MQ_Default_subscriber" destination="${anypoint.mq.exchange.name}"/>
				<error-handler>
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="a4fb7586-26cc-4b50-97a0-461c3436cb86" type="ANY">
						<logger level="ERROR" doc:name="Logger" doc:id="e270e488-8e4c-490d-b0ae-738e29d53c55" message="#['Error creating order for customer '++ vars.originalCustomerId as String]" />
						<ee:transform doc:name="Save Message" doc:id="cfcc835a-3482-4ba8-ac6d-8905dd806e4b">
                            <ee:message />
                            <ee:variables>
                                <ee:set-variable variableName="messages"><![CDATA[%dw 2.0
output application/java
---
vars.messages as Array ++
[
	{
      severity: 'ERROR',
      code: '500',
      description: 
      	if (vars.customer.accountId == null)
      		'Error creating order for customer ' 
      			++ vars.originalCustomerId as String
      			++ ': CUSTOMER DOES NOT EXISTS'
      	else
      		if (vars.currentProduct.id == null)
      			'Error creating order for customer ' 
      			++ vars.originalCustomerId as String
      			++ ': PRODUCT ' ++ vars.originalProductId as String ++ ' DOES NOT EXISTS'
      		else
      	 		'Error creating order for customer ' 
      	 			++ vars.originalCustomerId as String ++ ". "
      	 			++ payload.messages[0].description default " (ERROR CREATING ORDER)"
    }
]]]></ee:set-variable>
                            </ee:variables>
                        </ee:transform>
					</on-error-continue>
                </error-handler>
            </try>
        </foreach>
		<ee:transform xsi:schemaLocation=" http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd  http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="bb9fcf6b-83c7-4b25-8c40-e54ff374b931" doc:name="Set Response">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  meta: {
    totalItems: sizeOf(vars.messages) default 0
  },
  messages: vars.messages default []
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
	<flow name="post:\payments:application\json:order-fulfillment-api-config">
        <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  meta: {
    messages: [
      {
        severity: "INFO",
        code: "200",
        description: "OK",
        link: {
          href: "http://localhost",
          title: "All good!"
        }
      }
    ],
    totalItems: 3,
    pagingOffset: 1,
    pagingLimit: 15
  },
  links: {
    self: {
      href: "http://localhost/currentPage",
      title: "Current page"
    },
    first: {
      href: "http://localhost/firstPage",
      title: "First Page"
    },
    prev: {
      href: "http://localhost/previousPage",
      title: "Previous page"
    },
    next: {
      href: "http://localhost/nextPage",
      title: "Next Page"
    },
    last: {
      href: "http://localhost/lastPage",
      title: "Last Page"
    }
  },
  messages: [
    {
      itemId: "2222222",
      severity: "INFO",
      code: "201",
      description: "payment record created"
    }, 
    {
      itemId: "3333333",
      severity: "INFO",
      code: "202",
      description: "Create payment request accepted"
    }, 
    {
      itemId: "111111",
      severity: "INFO",
      code: "409",
      description: "Duplicate payment record exists"
    }
  ]
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="post:\shipments:application\json:order-fulfillment-api-config">
        <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  meta: {
    messages: [
      {
        severity: "INFO",
        code: "200",
        description: "OK",
        link: {
          href: "http://localhost",
          title: "All good!"
        }
      }
    ],
    totalItems: 3,
    pagingOffset: 1,
    pagingLimit: 15
  },
  links: {
    self: {
      href: "http://localhost/currentPage",
      title: "Current page"
    },
    first: {
      href: "http://localhost/firstPage",
      title: "First Page"
    },
    prev: {
      href: "http://localhost/previousPage",
      title: "Previous page"
    },
    next: {
      href: "http://localhost/nextPage",
      title: "Next Page"
    },
    last: {
      href: "http://localhost/lastPage",
      title: "Last Page"
    }
  },
  messages: [
    {
      itemId: "2222222",
      severity: "INFO",
      code: "201",
      description: "shipment record created"
    }, 
    {
      itemId: "3333333",
      severity: "INFO",
      code: "202",
      description: "Create shipment request accepted"
    }, 
    {
      itemId: "111111",
      severity: "INFO",
      code: "409",
      description: "Duplicate shipment record exists"
    }
  ]
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
</mule>
